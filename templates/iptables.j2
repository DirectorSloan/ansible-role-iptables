# Generated by ansible
# Do not edit manually
# questions to ben.langenberg@ufz.de
*nat
:PREROUTING ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
{% if host_use_docker is defined -%}
:DOCKER - [0:0]
-A PREROUTING -m addrtype --dst-type LOCAL -j DOCKER
-A POSTROUTING -s 172.17.0.0/16 ! -o docker0 -j MASQUERADE
-A OUTPUT ! -d 127.0.0.0/8 -m addrtype --dst-type LOCAL -j DOCKER{{ "\n" }}
{%- endif %}
COMMIT
*mangle
:PREROUTING ACCEPT [0:0]
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
:POSTROUTING ACCEPT [0:0]
COMMIT
*raw
:PREROUTING ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
COMMIT
*security
:INPUT ACCEPT [0:0]
:FORWARD ACCEPT [0:0]
:OUTPUT ACCEPT [0:0]
COMMIT
*filter
:INPUT DROP [0:0]
:FORWARD DROP [0:0]
:OUTPUT ACCEPT [0:0]
:TCP - [0:0]
:UDP - [0:0]
:dynamic - [0:0]
{% if iptables_interconnect_interface is defined -%}
-A INPUT -p tcp -m tcp -s {{ iptables_interconnect_range }} -i {{ iptables_interconnect_interface }} -j ACCEPT -m comment --comment "interconnect all Allow"
-A INPUT -p udp -m udp -s {{ iptables_interconnect_range }} -i {{ iptables_interconnect_interface }} -j ACCEPT -m comment --comment "interconnect all Allow"{{ "\n" }}
{%- endif %}
-A INPUT -m comment --comment "INVALID goes to dynamic" -j dynamic
-A INPUT -m conntrack --ctstate RELATED,ESTABLISHED -m comment --comment "accept all of established connections and related" -j ACCEPT
-A INPUT -i lo -m comment --comment "accept everything on loopback interface" -j ACCEPT
-A INPUT -p ipv6 -m comment --comment "accept ICMPv6 neighbor discovery which are always state INVALID" -j ACCEPT
-A INPUT -m conntrack --ctstate INVALID -m comment --comment "drop all with invalid connection state" -j DROP
-A INPUT -p icmp -m icmp --icmp-type 8 -m conntrack --ctstate NEW -m comment --comment "accept ping" -j ACCEPT
-A INPUT -p udp -m conntrack --ctstate NEW -m comment --comment "redirect new UDP connections to UDP chain" -j UDP
-A INPUT -p tcp -m tcp --tcp-flags FIN,SYN,RST,ACK SYN -m conntrack --ctstate NEW -m comment --comment "redirect new TCP connections to TCP chain" -j TCP
-A INPUT -p udp -m comment --comment "reject all other UDP that were not previously accepted" -j REJECT --reject-with icmp-port-unreachable
-A INPUT -p tcp -m comment --comment "reject all other TCP that were not previously accepted" -j REJECT --reject-with tcp-reset
-A FORWARD -i {{ iptables_public_interface }} -j ACCEPT
-A FORWARD -i {{ iptables_public_interface }} -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
# begin host specific rules read from template dict fency stuff
{% if iptables_tcp_rules is defined -%}
 {%- for item in iptables_tcp_rules %}
-A TCP -p tcp -m tcp -i {{ iptables_public_interface }} -s {{ item.sourceaddress }} --dport {{ item.destinationport }} -m comment --comment "{{ item.comment }}" -j ACCEPT{{ "\n" }}
 {%- endfor %}
{%- endif %}
{% if iptables_udp_rules is defined -%}
 {%- for item in iptables_udp_rules %}
-A UDP -p udp -m udp -i {{ iptables_public_interface }} -s {{ item.sourceaddress }} --dport {{ item.destinationport }} -m comment --comment "{{ item.comment }}" -j ACCEPT{{ "\n" }}
 {%- endfor %}
{%- endif %}
{% if host_use_docker is defined -%}
:DOCKER - [0:0]
-A FORWARD -o docker0 -j DOCKER
-A FORWARD -o docker0 -m conntrack --ctstate RELATED,ESTABLISHED -j ACCEPT
-A FORWARD -i docker0 ! -o docker0 -j ACCEPT
-A FORWARD -i docker0 -o docker0 -j ACCEPT{{ "\n" }}
{%- endif %}
COMMIT
